// This file is autogenerated. Do not edit it
package com.popovanton0.kira.generated.functions_with_scope_param_name

import com.popovanton0.kira.suppliers.Kira
import com.popovanton0.kira.suppliers.KiraProvider
import com.popovanton0.kira.suppliers.StringSupplierBuilder
import com.popovanton0.kira.suppliers.base.Supplier
import com.popovanton0.kira.suppliers.compound.GeneratedKiraScopeWithImpls
import com.popovanton0.kira.suppliers.compound.injector
import com.popovanton0.kira.suppliers.kira
import com.popovanton0.kira.suppliers.string
import functions_with_scope_param_name.ExampleFunction
import kotlin.String
import kotlin.collections.List
import kotlin.collections.listOf

public class Kira_ExampleFunction() : KiraProvider<ExampleFunctionScope> {
  public override val kira: Kira<ExampleFunctionScope> = kira(ExampleFunctionScope()) {
    scope = string(paramName = "scope", defaultValue = "Lorem")
    injector {
      ExampleFunction(
        scope = scope.currentValue(),
      )
    }
  }

}

public class ExampleFunctionScope :
    GeneratedKiraScopeWithImpls<ExampleFunctionScope.SupplierImplsScope>() {
  protected override val `$$$supplierImplsScope$$$`: SupplierImplsScope = SupplierImplsScope(this)

  public lateinit var scope: Supplier<String>

  public override fun collectSuppliers(): List<Supplier<*>> = listOf(scope, )

  public class SupplierImplsScope(
    private val `scope$`: ExampleFunctionScope,
  ) : GeneratedKiraScopeWithImpls.SupplierImplsScope() {
    public var scope: StringSupplierBuilder
      get() = `scope$`.scope as? StringSupplierBuilder ?: implChanged()
      set(`value`) {
        `scope$`.scope = value
      }
  }
}
