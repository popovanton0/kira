// This file is autogenerated. Do not edit it
package com.popovanton0.kira.generated.whole_number_processor

import com.popovanton0.kira.suppliers.Kira
import com.popovanton0.kira.suppliers.KiraProvider
import com.popovanton0.kira.suppliers.NullableWholeNumberSupplierBuilder
import com.popovanton0.kira.suppliers.WholeNumberSupplierBuilder
import com.popovanton0.kira.suppliers.base.SupplierBuilder
import com.popovanton0.kira.suppliers.byte
import com.popovanton0.kira.suppliers.compound.GeneratedKiraScopeWithImpls
import com.popovanton0.kira.suppliers.compound.injector
import com.popovanton0.kira.suppliers.int
import com.popovanton0.kira.suppliers.kira
import com.popovanton0.kira.suppliers.long
import com.popovanton0.kira.suppliers.nullableByte
import com.popovanton0.kira.suppliers.nullableInt
import com.popovanton0.kira.suppliers.nullableLong
import com.popovanton0.kira.suppliers.nullableShort
import com.popovanton0.kira.suppliers.nullableUByte
import com.popovanton0.kira.suppliers.nullableUInt
import com.popovanton0.kira.suppliers.nullableULong
import com.popovanton0.kira.suppliers.nullableUShort
import com.popovanton0.kira.suppliers.short
import com.popovanton0.kira.suppliers.uByte
import com.popovanton0.kira.suppliers.uInt
import com.popovanton0.kira.suppliers.uLong
import com.popovanton0.kira.suppliers.uShort
import kotlin.Byte
import kotlin.Int
import kotlin.Long
import kotlin.Short
import kotlin.UByte
import kotlin.UInt
import kotlin.ULong
import kotlin.UShort
import kotlin.collections.List
import kotlin.collections.listOf
import whole_number_processor.ExampleFunction

public class Kira_ExampleFunction() : KiraProvider<ExampleFunctionScope> {
  public override val kira: Kira<ExampleFunctionScope> = kira(ExampleFunctionScope()) {
    byte = byte(paramName = "byte")
    short = short(paramName = "short")
    int = int(paramName = "int")
    long = long(paramName = "long")
    uByte = uByte(paramName = "uByte")
    uShort = uShort(paramName = "uShort")
    uInt = uInt(paramName = "uInt")
    uLong = uLong(paramName = "uLong")
    nullableByte = nullableByte(paramName = "nullableByte")
    nullableShort = nullableShort(paramName = "nullableShort")
    nullableInt = nullableInt(paramName = "nullableInt")
    nullableLong = nullableLong(paramName = "nullableLong")
    nullableUByte = nullableUByte(paramName = "nullableUByte")
    nullableUShort = nullableUShort(paramName = "nullableUShort")
    nullableUInt = nullableUInt(paramName = "nullableUInt")
    nullableULong = nullableULong(paramName = "nullableULong")
    injector {
      ExampleFunction(
        byte = byte.build().currentValue(),
        short = short.build().currentValue(),
        int = int.build().currentValue(),
        long = long.build().currentValue(),
        uByte = uByte.build().currentValue(),
        uShort = uShort.build().currentValue(),
        uInt = uInt.build().currentValue(),
        uLong = uLong.build().currentValue(),
        nullableByte = nullableByte.build().currentValue(),
        nullableShort = nullableShort.build().currentValue(),
        nullableInt = nullableInt.build().currentValue(),
        nullableLong = nullableLong.build().currentValue(),
        nullableUByte = nullableUByte.build().currentValue(),
        nullableUShort = nullableUShort.build().currentValue(),
        nullableUInt = nullableUInt.build().currentValue(),
        nullableULong = nullableULong.build().currentValue(),
      )
    }
  }

}

public class ExampleFunctionScope :
    GeneratedKiraScopeWithImpls<ExampleFunctionScope.SupplierImplsScope>() {
  protected override val `$$$supplierImplsScope$$$`: SupplierImplsScope = SupplierImplsScope(this)

  public lateinit var byte: SupplierBuilder<Byte>

  public lateinit var short: SupplierBuilder<Short>

  public lateinit var int: SupplierBuilder<Int>

  public lateinit var long: SupplierBuilder<Long>

  public lateinit var uByte: SupplierBuilder<UByte>

  public lateinit var uShort: SupplierBuilder<UShort>

  public lateinit var uInt: SupplierBuilder<UInt>

  public lateinit var uLong: SupplierBuilder<ULong>

  public lateinit var nullableByte: SupplierBuilder<Byte?>

  public lateinit var nullableShort: SupplierBuilder<Short?>

  public lateinit var nullableInt: SupplierBuilder<Int?>

  public lateinit var nullableLong: SupplierBuilder<Long?>

  public lateinit var nullableUByte: SupplierBuilder<UByte?>

  public lateinit var nullableUShort: SupplierBuilder<UShort?>

  public lateinit var nullableUInt: SupplierBuilder<UInt?>

  public lateinit var nullableULong: SupplierBuilder<ULong?>

  public override fun collectSupplierBuilders(): List<SupplierBuilder<*>> = listOf(byte, short, int,
      long, uByte, uShort, uInt, uLong, nullableByte, nullableShort, nullableInt, nullableLong,
      nullableUByte, nullableUShort, nullableUInt, nullableULong, )

  public class SupplierImplsScope(
    private val scope: ExampleFunctionScope,
  ) : GeneratedKiraScopeWithImpls.SupplierImplsScope() {
    public var byte: WholeNumberSupplierBuilder<Byte>
      get() = scope.byte as? WholeNumberSupplierBuilder<Byte> ?: implChanged()
      set(`value`) {
        scope.byte = value
      }

    public var short: WholeNumberSupplierBuilder<Short>
      get() = scope.short as? WholeNumberSupplierBuilder<Short> ?: implChanged()
      set(`value`) {
        scope.short = value
      }

    public var int: WholeNumberSupplierBuilder<Int>
      get() = scope.int as? WholeNumberSupplierBuilder<Int> ?: implChanged()
      set(`value`) {
        scope.int = value
      }

    public var long: WholeNumberSupplierBuilder<Long>
      get() = scope.long as? WholeNumberSupplierBuilder<Long> ?: implChanged()
      set(`value`) {
        scope.long = value
      }

    public var uByte: WholeNumberSupplierBuilder<UByte>
      get() = scope.uByte as? WholeNumberSupplierBuilder<UByte> ?: implChanged()
      set(`value`) {
        scope.uByte = value
      }

    public var uShort: WholeNumberSupplierBuilder<UShort>
      get() = scope.uShort as? WholeNumberSupplierBuilder<UShort> ?: implChanged()
      set(`value`) {
        scope.uShort = value
      }

    public var uInt: WholeNumberSupplierBuilder<UInt>
      get() = scope.uInt as? WholeNumberSupplierBuilder<UInt> ?: implChanged()
      set(`value`) {
        scope.uInt = value
      }

    public var uLong: WholeNumberSupplierBuilder<ULong>
      get() = scope.uLong as? WholeNumberSupplierBuilder<ULong> ?: implChanged()
      set(`value`) {
        scope.uLong = value
      }

    public var nullableByte: NullableWholeNumberSupplierBuilder<Byte>
      get() = scope.nullableByte as? NullableWholeNumberSupplierBuilder<Byte> ?: implChanged()
      set(`value`) {
        scope.nullableByte = value
      }

    public var nullableShort: NullableWholeNumberSupplierBuilder<Short>
      get() = scope.nullableShort as? NullableWholeNumberSupplierBuilder<Short> ?: implChanged()
      set(`value`) {
        scope.nullableShort = value
      }

    public var nullableInt: NullableWholeNumberSupplierBuilder<Int>
      get() = scope.nullableInt as? NullableWholeNumberSupplierBuilder<Int> ?: implChanged()
      set(`value`) {
        scope.nullableInt = value
      }

    public var nullableLong: NullableWholeNumberSupplierBuilder<Long>
      get() = scope.nullableLong as? NullableWholeNumberSupplierBuilder<Long> ?: implChanged()
      set(`value`) {
        scope.nullableLong = value
      }

    public var nullableUByte: NullableWholeNumberSupplierBuilder<UByte>
      get() = scope.nullableUByte as? NullableWholeNumberSupplierBuilder<UByte> ?: implChanged()
      set(`value`) {
        scope.nullableUByte = value
      }

    public var nullableUShort: NullableWholeNumberSupplierBuilder<UShort>
      get() = scope.nullableUShort as? NullableWholeNumberSupplierBuilder<UShort> ?: implChanged()
      set(`value`) {
        scope.nullableUShort = value
      }

    public var nullableUInt: NullableWholeNumberSupplierBuilder<UInt>
      get() = scope.nullableUInt as? NullableWholeNumberSupplierBuilder<UInt> ?: implChanged()
      set(`value`) {
        scope.nullableUInt = value
      }

    public var nullableULong: NullableWholeNumberSupplierBuilder<ULong>
      get() = scope.nullableULong as? NullableWholeNumberSupplierBuilder<ULong> ?: implChanged()
      set(`value`) {
        scope.nullableULong = value
      }
  }
}
