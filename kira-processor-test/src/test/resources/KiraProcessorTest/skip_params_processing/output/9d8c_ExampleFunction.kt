// This file is autogenerated. Do not edit it
package com.popovanton0.kira.generated.skip_params_processing

import com.popovanton0.kira.suppliers.Kira
import com.popovanton0.kira.suppliers.KiraProvider
import com.popovanton0.kira.suppliers.StringSupplierBuilder
import com.popovanton0.kira.suppliers.WholeNumberSupplierBuilder
import com.popovanton0.kira.suppliers.base.SupplierBuilder
import com.popovanton0.kira.suppliers.compound.GeneratedKiraScopeWithImpls
import com.popovanton0.kira.suppliers.compound.injector
import com.popovanton0.kira.suppliers.kira
import com.popovanton0.kira.suppliers.short
import com.popovanton0.kira.suppliers.string
import kotlin.Short
import kotlin.String
import kotlin.collections.List
import kotlin.collections.listOf
import skip_params_processing.ExampleFunction

public class Kira_ExampleFunction() : KiraProvider<ExampleFunctionScope> {
  public override val kira: Kira<ExampleFunctionScope> = kira(ExampleFunctionScope()) {
    param1 = string(paramName = "param1")
    param4 = short(paramName = "param4")
    injector {
      ExampleFunction(
        param1 = param1.build().currentValue(),
        param4 = param4.build().currentValue(),
      )
    }
  }

}

public class ExampleFunctionScope :
    GeneratedKiraScopeWithImpls<ExampleFunctionScope.SupplierImplsScope>() {
  protected override val `$$$supplierImplsScope$$$`: SupplierImplsScope = SupplierImplsScope(this)

  public lateinit var param1: SupplierBuilder<String>

  public lateinit var param4: SupplierBuilder<Short>

  public override fun collectSupplierBuilders(): List<SupplierBuilder<*>> = listOf(param1, param4, )

  public class SupplierImplsScope(
    private val scope: ExampleFunctionScope,
  ) : GeneratedKiraScopeWithImpls.SupplierImplsScope() {
    public var param1: StringSupplierBuilder
      get() = scope.param1 as? StringSupplierBuilder ?: implChanged()
      set(`value`) {
        scope.param1 = value
      }

    public var param4: WholeNumberSupplierBuilder<Short>
      get() = scope.param4 as? WholeNumberSupplierBuilder<Short> ?: implChanged()
      set(`value`) {
        scope.param4 = value
      }
  }
}
